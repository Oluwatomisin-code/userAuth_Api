const User = require("../model/user");
const jwt = require("jsonwebtoken");

//error handler
const errorHandler = (err) => {
    // console.log(err.message, err.code)

    let error = { email: '', password: '' }

    //signup errors
    //unique error or duplicate error
    if (err.code = 11000) {
        error.email = "Email has already been used";
    }
    //other type of errors encoutered while creating new user
    if (err.message.includes('user validation failed')) {
        // console.log(Object.values(err.errors))
        Object.values(err.errors).forEach(({ properties }) => {
            console.log(properties)
            error[properties.path] = properties.message
        });

    }


    //login errors
    if (err.message === 'incorrect email') {
        error.email = 'you have entered a wrong email';
    }
    if (err.message === 'incorrect password') {
        error.email = '';
        error.password = 'you have entered a wrong password'
    }

    //return for both signup and login errors
    return error;
}

//createToken function for jwt signing
//maxAge variable is used to expire the token generated by jwt
const maxAge = 1 * 24 * 60 * 60;
const createToken = (id) => {
    return jwt.sign({ id }, 'secretkey', { expiresIn: maxAge });
}


//routes controllers starts here
module.exports.register = async(req, res) => {
    console.log('new attempt to register')
        // res.json('attempt to register new user')
        // console.log(req.body)
    const { email, password } = req.body;

    try {
        //save user in database
        const createUser = await User.create({ email, password });

        //after successful creating, create token with jwt
        const token = createToken(createUser._id);

        //respond with a cookie containing the token
        res.cookie('token', token, { httpOnly: true, maxAge });
        res.status(201).json(createUser._id)
    } catch (err) {
        let error = errorHandler(err)
        console.log(error);
        res.status(400).send(error);
    }
}

module.exports.login = async(req, res) => {
    const { email, password } = req.body;

    try {
        const user = await User.login(email, password);
        console.log('attempt to login success')
        const token = createToken(user._id);

        //respond with a cookie containing the token
        res.cookie('token', token, { httpOnly: true, maxAge });
        res.status(200).json(user._id);

    } catch (err) {
        // console.log(err)
        let error = errorHandler(err)
        console.log(error)
        res.status(400).json(error)
    }
}